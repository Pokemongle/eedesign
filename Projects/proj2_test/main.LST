C51 COMPILER V9.01   MAIN                                                                  06/01/2023 11:46:38 PAGE 1   


C51 COMPILER V9.01, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN main.OBJ
COMPILER INVOKED BY: D:\C51\BIN\C51.EXE main.c BROWSE INCDIR(..\..\Public) DEBUG OBJECTEXTEND

line level    source

   1          #include <STC12C5A.h> // special function register declarations
   2          #include <absacc.h>
   3          #include <intrins.h> //void _nop_(void)
   4          #include <math.h>
   5          #define DA_CH2 XBYTE[0x2000]
   6          #define DA_LEN 8000
   7          void init_timer0();
   8          void init_special_interrupts();
   9          void init_ad();
  10          void fdisp_float(float n);
  11          void model_select();
  12          unsigned char dspbuf[4] = {0xef, 0xef, 0xef, 0xef}, sel = 0, key_sta = 0, intr_count = 0;
  13          unsigned int key_num = 0, model = 0;
  14          unsigned int dspcount = 0;
  15          unsigned int da_p = 0, daplayback_p = 0, clearflag = 0, dag_p = 0;
  16          unsigned int adresult = 0;
  17          int ampl = 0;
  18          amp = 0, ad_p = 0;
  19          int ii = 0, disp_flag = 0, save_flag = 0, save_count = 0, disp_count = 0;
  20          float adamp = 0.0;
  21          unsigned char xdata da_data[DA_LEN];
  22          sbit D_SER = P1^0;
  23          sbit D_SRCLK = P1^1;
  24          sbit D_RCLK = P1^2;
  25          sbit KEY = P3 ^ 5;
  26          sbit Y = P1 ^ 4;
  27          
  28          //---------------------------------------------------------------------------------------
  29          void init_timer0(void) // 定时器初始化
  30          {
  31   1          TMOD &= 0XF0;
  32   1          TMOD |= 0X02;
  33   1          TL0 = 0X06;
  34   1          TH0 = 0X06;
  35   1          TR0 = 1;
  36   1          ET0 = 1;
  37   1      }
  38          //---------------------------------------------------------------------------------------
  39          void init_ad() // ad 寄存器初始化
  40          {
  41   1          P1ASF = 0x08;
  42   1          ADC_CONTR = 0xE3;
  43   1          AUXR1 &= 0xfb;
  44   1          CLK_DIV = 0x01;
  45   1      }
  46          //---------------------------------------------------------------------------------------
  47          void init_special_interrupts(void) // 中断初始化
  48          {
  49   1          EX0 = 0;
  50   1          ET0 = 1;
  51   1          EX1 = 0;
  52   1          ET1 = 0;
  53   1          ES = 1;
  54   1          EA = 1;
  55   1          PT0 = 0;
C51 COMPILER V9.01   MAIN                                                                  06/01/2023 11:46:38 PAGE 2   

  56   1          PX1 = 1;
  57   1          PS = 0;
  58   1      }
  59          //---------------------------------------------------------------------------------------
  60          void dsptask() // 数码管扫描
  61          {
  62   1          unsigned char i;
  63   1          unsigned char a, b;
  64   1          switch (sel)
  65   1          {
  66   2          case 0:
  67   2              a = 0x01;
  68   2              break;
  69   2          case 1:
  70   2              a = 0x02;
  71   2              break;
  72   2          case 2:
  73   2              a = 0x04;
  74   2              break;
  75   2          case 3:
  76   2              a = 0x08;
  77   2              break;
  78   2          default:
  79   2              a = 0x10;
  80   2              break;
  81   2          }
  82   1          for (b = 0x80, i = 0; i < 8; i++)
  83   1          {
  84   2              if (a & b)
  85   2                  D_SER = 1;
  86   2              else
  87   2                  D_SER = 0;
  88   2              D_SRCLK = 0;
  89   2              D_SRCLK = 1;
  90   2              D_SRCLK = 0;
  91   2              b = b >> 1;
  92   2              b = b & 0x7f;
  93   2          }
  94   1          a = dspbuf[sel];
  95   1          key_num = sel;
  96   1          sel++;
  97   1          if (sel >= 5)
  98   1              sel = 0;
  99   1          for (b = 0x80, i = 0; i < 8; i++)
 100   1          {
 101   2              if (a & b)
 102   2                  D_SER = 1;
 103   2              else
 104   2                  D_SER = 0;
 105   2              D_SRCLK = 0;
 106   2              D_SRCLK = 1;
 107   2              D_SRCLK = 0;
 108   2              b = b >> 1;
 109   2              b = b & 0x7fff;
 110   2          }
 111   1          D_RCLK = 0;
 112   1          D_RCLK = 1;
 113   1          D_RCLK = 0;
 114   1      }
 115          //---------------------------------------------------------------------------------------
 116          void key_service() // 按键扫描
 117          {
C51 COMPILER V9.01   MAIN                                                                  06/01/2023 11:46:38 PAGE 3   

 118   1          if (key_sta & 0x01)
 119   1              return; // key_sta.0=1
 120   1          if (KEY)
 121   1          {
 122   2              model = key_num + 1;
 123   2              key_sta = key_sta | 0x01; // key_sta.0=1
 124   2          }
 125   1      }
 126          //---------------------------------------------------------------------------------------
 127          void fdisp_num(int float_flag, int i, int n) // 数码管段码表
 128          {
 129   1          char c;
 130   1          switch (n)
 131   1          {
 132   2          case 0:
 133   2              c = 0x11;
 134   2              break;
 135   2          case 1:
 136   2              c = 0x7d;
 137   2              break;
 138   2          case 2:
 139   2              c = 0x23;
 140   2              break;
 141   2          case 3:
 142   2              c = 0x29;
 143   2              break;
 144   2          case 4:
 145   2              c = 0x4d;
 146   2              break;
 147   2          case 5:
 148   2              c = 0x89;
 149   2              break;
 150   2          case 6:
 151   2              c = 0x81;
 152   2              break;
 153   2          case 7:
 154   2              c = 0x3d;
 155   2              break;
 156   2          case 8:
 157   2              c = 0x01;
 158   2              break;
 159   2          case 9:
 160   2              c = 0x09;
 161   2              break;
 162   2          default:
 163   2              c = 0xff;
 164   2          }
 165   1          if (float_flag == 1)
 166   1          {
 167   2              c = c & 0xFE;
 168   2          }
 169   1          dspbuf[i] = c;
 170   1      }
 171          //---------------------------------------------------------------------------------------
 172          void ad_get() // ad 采样
 173          {
 174   1          int i = 0;
 175   1          ADC_RES = 0;
 176   1          ADC_CONTR |= 0x08;
 177   1          for (i = 0; i < 4; i++)
 178   1          {
 179   2              _nop_();
C51 COMPILER V9.01   MAIN                                                                  06/01/2023 11:46:38 PAGE 4   

 180   2          }
 181   1          while (ADC_CONTR & 0x10 == 0);
 182   1          ADC_CONTR &= 0xE7;
 183   1          adresult = ADC_RES; // 存储采样值
 184   1      }
 185          //--------------------------------------------------------------------------------------- 
 186          void ad_save() //ad 采样值存储
 187          {
 188   1          Y = !Y;
 189   1          da_data[da_p] = adresult * 10;
 190   1          da_p++;
 191   1          if (da_p >= DA_LEN)
 192   1          {
 193   2              da_p = 0;
 194   2          }
 195   1      }
 196          //--------------------------------------------------------------------------------------- 
 197          void da_display(int disp_flag) //da 转换输出
 198          {
 199   1          if (disp_flag == 1)
 200   1          {
 201   2              DA_CH2 = da_data[daplayback_p];
 202   2              disp_count = disp_count + 10;
 203   2              if (disp_count == 150)
 204   2              {
 205   3                  disp_count = 0;
 206   3                  daplayback_p++;
 207   3              }
 208   2              if (daplayback_p >= DA_LEN)
 209   2              {
 210   3                  daplayback_p = 0;
 211   3              }
 212   2          }
 213   1      }
 214          //--------------------------------------------------------------------------------------- 
 215          void fdisp_float(float n) //数码管显示
 216          {
 217   1          int i, order, n_int;
 218   1          unsigned int s;
 219   1          order = (int)log10(n);
 220   1          if (order > 0)
 221   1          {
 222   2              i = 3;
 223   2              n_int = (int)(n * 10);
 224   2              for (i = 3; i >= 0; i--)
 225   2              {
 226   3                  s = n_int % 10;
 227   3                  if (i == 2)
 228   3                  {
 229   4                      fdisp_num(1, i, s);
 230   4                  }
 231   3                  else
 232   3                  {
 233   4                      fdisp_num(0, i, s);
 234   4                  }
 235   3                  n_int = n_int / 10;
 236   3              }
 237   2          }
 238   1          else
 239   1          {
 240   2              if (n < 0)
 241   2              {
C51 COMPILER V9.01   MAIN                                                                  06/01/2023 11:46:38 PAGE 5   

 242   3                  dspbuf[0] = 0xef;
 243   3                  n = -1 * n;
 244   3              }
 245   2              else
 246   2              {
 247   3                  dspbuf[0] = 0xff;
 248   3              }
 249   2              for (i = 1; i < 4; i++)
 250   2              {
 251   3                  s = (int)n;
 252   3                  if (i == 1)
 253   3                  {
 254   4                      fdisp_num(1, i, s);
 255   4                  }
 256   3                  else
 257   3                  {
 258   4                      fdisp_num(0, i, s);
 259   4                  }
 260   3                  n = (n - s) * 10;
 261   3              }
 262   2          }
 263   1      }
 264          //--------------------------------------------------------------------------------------- 
 265          void amp_measure() //幅值测量
 266          {
 267   1          adamp = (adresult - 127) * 5.0 / 256;
 268   1          adamp = -36.37 * adamp + 41.55;
 269   1          ii++;
 270   1          if (ii == 3)
 271   1          {
 272   2              ii = 0;
 273   2              fdisp_float(adamp);
 274   2          }
 275   1      }
 276          //--------------------------------------------------------------------------------------- 
 277          void clear() //清零
 278          {
 279   1          int ram_p;
 280   1          EA = 0;
 281   1          for (ram_p = 0; ram_p < da_p; ram_p++)
 282   1          {
 283   2              XBYTE[ram_p] = 0;
 284   2          }
 285   1          fdisp_float(0000);
 286   1          da_p = 0;
 287   1          clearflag = 0;
 288   1          EA = 1;
 289   1      }
 290          //--------------------------------------------------------------------------------------- 
 291          void model_select() //模式选择
 292          {
 293   1          switch (model)
 294   1          {
 295   2          case 1: // 显示温度
 296   2              amp_measure();
 297   2              save_flag = 1;
 298   2              break;
 299   2          case 2:
 300   2              amp_measure(); // 显示温度和回放测量
 301   2              disp_flag = 1;
 302   2              save_flag = 0;
 303   2              break;
C51 COMPILER V9.01   MAIN                                                                  06/01/2023 11:46:38 PAGE 6   

 304   2          case 3:
 305   2              disp_flag = 0;
 306   2          default:
 307   2              break;
 308   2          }
 309   1      }
 310          //--------------------------------------------------------------------------------------- 
 311          void timer_isr() interrupt 1 //定时器中断处理
 312          {
 313   1          ad_get();
 314   1          save_count++;
 315   1          if ((save_count == 150) && (save_flag == 1))
 316   1          {
 317   2              save_count = 0;
 318   2              ad_save();
 319   2          }
 320   1          da_display(disp_flag);
 321   1      }
 322          //--------------------------------------------------------------------------------------- 
 323          void main(void) //主函数
 324          {
 325   1          init_timer0();             // 定时器初始化
 326   1          init_special_interrupts(); // 中断设置初始化
 327   1          init_ad();                 // ad 寄存器初始化
 328   1          for (;;)
 329   1          {
 330   2              dspcount++;
 331   2              if (dspcount == 3) // 数码管与按键
 332   2              {
 333   3                  dspcount = 0;
 334   3                  dsptask();
 335   3                  key_service();
 336   3              }
 337   2              model_select();
 338   2              if (key_sta & 0x01) // key_sta.0==1 数码管显示
 339   2              {
 340   3                  fdisp_num(0, 0, 10);
 341   3                  fdisp_num(0, 1, 10);
 342   3                  fdisp_num(0, 2, 10);
 343   3                  fdisp_num(0, 3, model);
 344   3                  key_sta = key_sta & 0xfe; // key_sta.0=0
 345   3              }
 346   2              if (clearflag)
 347   2              {
 348   3                  clear();
 349   3              }
 350   2          }
 351   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1119    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   8000    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     43      14
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
