C51 COMPILER V9.01   KEY                                                                   05/15/2023 14:54:23 PAGE 1   


C51 COMPILER V9.01, COMPILATION OF MODULE KEY
OBJECT MODULE PLACED IN .\key.obj
COMPILER INVOKED BY: D:\C51\BIN\C51.EXE ..\..\App\key.c BROWSE INCDIR(..\..\Public;..\..\App) DEBUG OBJECTEXTEND PRINT(.
                    -\key.lst) OBJECT(.\key.obj)

line level    source

   1          //==头文件==
   2          #include <STC12C5A.h> // 51标准头文件
   3          #include "key.h"
   4          #include "led.h"
   5          #include "adda.h"
   6          //==========
   7          //==变量声明==
   8          unsigned char
   9                  amp_modi = 0,  // 调幅标志
  10                  da_index = 2,  // 调幅参数
  11                  flag_amp = 0,  // 显示幅值标志
  12                  flag_fre = 0,  // 显示频率标志 
  13                  fre_modi = 0,  // 调频标志
  14                  key_col = 0,   // 按键扫描当前列
  15                  key_num = 0,   // 按键序号
  16                  key_sta = 0,
  17                  mode = 0,          // 模式选择
  18                  wave_sel = 0;  // 信号发生器波形选择
  19          unsigned int
  20                  gen_count = 4; // 信号发生器频率控制
  21          
  22          //============
  23          void key_service()
  24          {
  25   1              if(key_sta & 0x01) return;//key_sta.0 = 1，按键为按下状态
  26   1              // key_sta.0 = 0，按键为弹起状态，检测到KEY1/KEY2行有按键被按下
  27   1              if(KEY1){
  28   2                      key_num = key_col + 1; 
  29   2                      key_sta = key_sta | 0x01;//key_sta.0 = 1
  30   2              }       
  31   1              else if(KEY2){
  32   2                      key_num = key_col + 5;
  33   2                      key_sta = key_sta | 0x01;//key_sta.0 = 1        
  34   2              }
  35   1              
  36   1      }
  37          void mode_select()      // 模式选择
  38          {
  39   1              switch(key_num){
  40   2                      case 1:{                // 模式1：实时采样+存储，信号发生器
  41   3                              mode = 1;
  42   3                              fdisp(1,0); // 数码管最左端显示模式1
  43   3                              fdisp(0,1);
  44   3                              fdisp(0,2);
  45   3                              fdisp(wave_sel,3);
  46   3                      };break;
  47   2                      case 2:{                // 模式2：实时采样，波形回放
  48   3                              mode = 2;
  49   3                              fdisp(2,0);     // 数码管最左端显示模式2
  50   3                              fdisp(0,1);
  51   3                              fdisp(0,2);
  52   3                              fdisp(0,3);     // 数码管最右端波形显示清零     
  53   3                      };break;
  54   2                      case 3:{                // 模式3：测量实时采样的幅值和频率（或周期）
C51 COMPILER V9.01   KEY                                                                   05/15/2023 14:54:23 PAGE 2   

  55   3                              mode = 3;
  56   3                              fdisp(3,0);
  57   3                              fdisp(0,1);
  58   3                              fdisp(0,2);
  59   3                              fdisp(0,3);
  60   3                      };break;
  61   2                      case 4:{                // 信号发生器调频调幅
  62   3                              mode = 4;                       
  63   3                              fdisp(4,0);               // 数码管最左端显示模式4
  64   3                              fdisp(0,1);
  65   3                              fdisp(0,2);
  66   3                              fdisp(wave_sel,3);// 数码管最右端显示波形       
  67   3                      };break;
  68   2                      case 5:{
  69   3                              if(mode == 1){                  // 模式1下，按键5表示选择正弦波
  70   4                                      wave_sel = SIN;
  71   4                                      fdisp(wave_sel,3);      // 在数码管最右端显示波形选择
  72   4                              }
  73   3                              else if(mode == 2){;}
  74   3                              else if(mode == 3){             // 模式3下，按键5显示测量频率
  75   4                                      flag_amp = 0;                                                                                                                            
  76   4                                      flag_fre = 1;
  77   4                              }
  78   3                              else if(mode == 4){             // 模式4下，按键5表示频率1
  79   4                                      if(fre_modi){
  80   5                                              gen_count = 4;
  81   5                                      }
  82   4                                      if(amp_modi){
  83   5                                              da_index = 2;
  84   5                                      }
  85   4                              }
  86   3                      };break;
  87   2                      case 6:{
  88   3                              if(mode == 1){                  // 模式1下，按键5表示选择三角波
  89   4                                      wave_sel = TRI;
  90   4                                      fdisp(wave_sel,3);
  91   4                              }
  92   3                              else if(mode == 3){             // 模式3下，按键6表示测量幅值
  93   4                                      flag_fre = 0;
  94   4                                      flag_amp = 1;           
  95   4                              } 
  96   3                              else if(mode == 4){             // 模式4下，按键6表示频率2
  97   4                                      if(fre_modi){
  98   5                                              gen_count = 3;
  99   5                                      }
 100   4                                      if(amp_modi){
 101   5                                              da_index = 3;
 102   5                                      }
 103   4                              }       
 104   3                      };break;
 105   2                      case 7:{
 106   3                              if(mode == 1){                  // 模式1下，按键7表示选择方波
 107   4                                      wave_sel = REC;         
 108   4                                      fdisp(wave_sel,3);      
 109   4                              }
 110   3                              else if(mode == 3){
 111   4                                      fre_modi = 1;
 112   4                                      amp_modi = 0;
 113   4                              }
 114   3                              else if(mode == 4){             // 模式4下，按键7表示幅度减小,频率3
 115   4                                      if(fre_modi){
 116   5                                              gen_count = 2;
C51 COMPILER V9.01   KEY                                                                   05/15/2023 14:54:23 PAGE 3   

 117   5                                      }
 118   4                                      if(amp_modi){
 119   5                                              da_index = 4;
 120   5                                      }
 121   4                              }
 122   3                      };break;
 123   2                      case 8:{                                        
 124   3                              if(mode == 1){                  // 模式1下，按键8表示选择锯齿波
 125   4                                      wave_sel = SAW;
 126   4                                      fdisp(wave_sel,3);
 127   4                              }
 128   3                              else if(mode == 3){
 129   4                                      fre_modi = 0;
 130   4                                      amp_modi = 1;
 131   4                              }
 132   3                              else if(mode == 4){             // 模式4下，按键8表示幅度增大,频率4
 133   4                                      if(fre_modi){
 134   5                                              gen_count = 1;
 135   5                                      }
 136   4                                      if(amp_modi){
 137   5                                              da_index = 5;
 138   5                                      }
 139   4                              }
 140   3                      }; break;
 141   2                      default:break;
 142   2              }       
 143   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    371    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     12    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
