C51 COMPILER V9.01   AD                                                                    04/06/2023 13:31:28 PAGE 1   


C51 COMPILER V9.01, COMPILATION OF MODULE AD
OBJECT MODULE PLACED IN ad.OBJ
COMPILER INVOKED BY: D:\C51\BIN\C51.EXE ad.c BROWSE INCDIR(..\..\demos) DEBUG OBJECTEXTEND

line level    source

   1          #include <STC12C5A.h>
   2          #include "intrins.h"
   3          
   4          #define uchar unsigned char
   5          
   6          #define uint unsigned int
   7          
   8          #define ulong unsigned long
   9              
  10          
  11          #define FOSC    11059200L
  12          #define BAUD    9600
  13          
  14          
  15          typedef unsigned char BYTE;
  16          typedef unsigned int WORD;
  17          
  18          uchar o,p,q,*m,*e,*f;
  19          
  20          //sfr ADC_CONTR   =   0xBC;           //ADC control register
  21          //sfr ADC_RES     =   0xBD;           //ADC high 8-bit result register
  22          //sfr ADC_LOW2    =   0xBE;           //ADC low 2-bit result register
  23          //sfr P1ASF       =   0x9D;           //P1 secondary function control register
  24          
  25          /*Define ADC operation const for ADC_CONTR*/
  26          #define ADC_POWER   0x80            //ADC power control bit
  27          #define ADC_FLAG    0x10            //ADC complete flag
  28          #define ADC_START   0x08            //ADC start control bit
  29          #define ADC_SPEEDLL 0x00            //420 clocks
  30          #define ADC_SPEEDL  0x20            //280 clocks
  31          #define ADC_SPEEDH  0x40            //140 clocks
  32          #define ADC_SPEEDHH 0x60            //70 clocks
  33          
  34          #define  DAC_1    XBYTE[0x2000]
  35          #define  DAC_2    XBYTE[0x4000]
  36          #define  ADC_0    XBYTE[0x6000]
  37          #define  ADC_1    XBYTE[0x6001]
  38          #define  ADC_2    XBYTE[0x6002]
  39          #define  ADC_3    XBYTE[0x6003]
  40          #define  ADC_4    XBYTE[0x6004]
  41          #define  ADC_5    XBYTE[0x6005]
  42          #define  ADC_6    XBYTE[0x6006]
  43          #define  ADC_7    XBYTE[0x6007]
  44          
  45          #define  LEN        10
  46          
  47          void InitUart();
  48          void InitADC();
  49          unsigned char GetADC();
  50          void init_timer0();
  51          void init_special_interrupts();
  52          
  53          unsigned char        buff[LEN];
  54          unsigned char        p_read=0,p_write=0,ad_temp;
  55          unsigned char        dspbuf[4]={0xfe,0xfe,0xfe,0xfe},sel=0;
C51 COMPILER V9.01   AD                                                                    04/06/2023 13:31:28 PAGE 2   

  56          unsigned int         clocktime=0,adcount=0;
  57          
  58          sbit D_SER     = P1^0;
  59          sbit D_SRCLK   = P1^1;
  60          sbit D_RCLK    = P1^2;
  61          sbit KEY1      = P3^4;
  62          sbit KEY2      = P3^5;
  63          //---------------------------------------------------------------------------------------
  64          void init_timer0(void)              //  ???0??
  65            {
  66   1        TMOD &= 0XF0;
  67   1        TMOD |= 0X02;
  68   1        TL0 = 0X06;
  69   1        TH0 = 0X06;
  70   1        TR0 = 1;
  71   1        ET0 = 1;
  72   1        }
  73          //---------------------------------------------------------------------------------------
  74          void init_special_interrupts(void)   //  ????
  75            {
  76   1        EX0 = 0;
  77   1        ET0 = 1;
  78   1        EX1 = 0;
  79   1        ET1 = 0;
  80   1        ES  = 1;
  81   1        EA  = 1;
  82   1        PT0 = 0;
  83   1        PX1 = 1;
  84   1        PS  = 0;
  85   1        }
  86          //---------------------------------------------------------------------------------------
  87          void dsptask()
  88            {
  89   1        unsigned char i;
  90   1        unsigned char a,b;
  91   1      
  92   1        switch(sel)
  93   1         {
  94   2         case 0:  a=0x01;  break;
  95   2         case 1:  a=0x02;  break;
  96   2         case 2:  a=0x04;  break;
  97   2         default: a=0x08;
  98   2         }
  99   1       for(b=0x80,i=0;i<8;i++)
 100   1          {
 101   2          if(a&b)  D_SER=1;
 102   2          else     D_SER=0;
 103   2          D_SRCLK=0;
 104   2          D_SRCLK=1;
 105   2          D_SRCLK=0;
 106   2          b=b>>1;
 107   2          //b=b&0x7f;
 108   2          }
 109   1        a=dspbuf[sel];
 110   1        sel++;
 111   1        if(sel>=4) sel=0;
 112   1        for(b=0x80,i=0;i<8;i++)
 113   1          {
 114   2          if(a&b)  D_SER=1;
 115   2          else     D_SER=0;
 116   2          D_SRCLK=0;
 117   2          D_SRCLK=1;
C51 COMPILER V9.01   AD                                                                    04/06/2023 13:31:28 PAGE 3   

 118   2          D_SRCLK=0;
 119   2          b=b>>1;
 120   2          //b=b&0x7fff;
 121   2          }
 122   1        D_RCLK=0;
 123   1        D_RCLK=1;
 124   1        D_RCLK=0;
 125   1        }
 126          //---------------------------------------------------------------------------------------
 127          void timer_isr() interrupt 1           //???0????
 128            {
 129   1        //unsigned char  t;
 130   1        EA=0;
 131   1        adcount++;
 132   1        if(adcount==20)                      // 1/4*20 = 5ms
 133   1          {
 134   2          buff[p_write]=GetADC();               // A/D??
 135   2          //ADC_0=0;                           // restart A/D
 136   2          p_write++;
 137   2          if(p_write==LEN)  p_write=0;
 138   2          dsptask();
 139   2          clocktime++;
 140   2          adcount=0;
 141   2          }
 142   1        EA=1;
 143   1        }
 144          //---------------------------------------------------------------------------------------
 145          void fdisp(unsigned char n,unsigned char m)
 146            {
 147   1        char  c;
 148   1         switch(n)
 149   1          {
 150   2          case 0:  c=0x11;  break;
 151   2          case 1:  c=0x7d;  break;
 152   2          case 2:  c=0x23;  break;
 153   2          case 3:  c=0x29;  break;
 154   2          case 4:  c=0x4d;  break;
 155   2          case 5:  c=0x89;  break;
 156   2          case 6:  c=0x81;  break;
 157   2          case 7:  c=0x3d;  break;
 158   2          case 8:  c=0x01;  break;
 159   2          default: c=0x09;
 160   2          }
 161   1         dspbuf[m]=c;
 162   1        }
 163          //---------------------------------------------------------------------------------------
 164          void main(void)                    // ???
 165            {
 166   1            unsigned char res;
 167   1        init_timer0();                  //??????0
 168   1        init_special_interrupts();      //????
 169   1            InitUart();                     //Init UART, use to show ADC result
 170   1            InitADC();                      //Init ADC sfr
 171   1        for(;;)
 172   1          {
 173   2          if(p_read!=p_write)
 174   2                {
 175   3              res=buff[p_read];       // D/A??
 176   3              p_read++;
 177   3              if(p_read==LEN)  p_read=0;
 178   3              }
 179   2          }
C51 COMPILER V9.01   AD                                                                    04/06/2023 13:31:28 PAGE 4   

 180   1        }
 181          
 182          /*----------------------------
 183          Initial UART
 184          ----------------------------*/
 185          void InitUart()
 186          {
 187   1          SCON = 0x5a;                    //8 bit data ,no parity bit
 188   1          TMOD = 0x20;                    //T1 as 8-bit auto reload
 189   1          TH1 = TL1 = -(FOSC/12/32/BAUD); //Set Uart baudrate
 190   1          TR1 = 1;                        //T1 start running
 191   1      }
 192          
 193          /*----------------------------
 194          Initial ADC sfr
 195          ----------------------------*/
 196          void InitADC()
 197          {
 198   1          P1ASF = 0x03;                   //Open 8 channels ADC function
 199   1          ADC_RES = 0;                    //Clear previous result
 200   1          ADC_CONTR = 0x00;
 201   1          _nop_();                        //wait
 202   1          _nop_();
 203   1          _nop_();
 204   1          _nop_();
 205   1      }
 206          unsigned char GetADC()
 207          {
 208   1          unsigned int res;
 209   1          ADC_CONTR = ADC_CONTR|ADC_POWER|ADC_START;
 210   1          _nop_();                        //wait
 211   1          _nop_();
 212   1          _nop_();
 213   1          _nop_();
 214   1          while(!(ADC_CONTR&ADC_FLAG));//??AD?????FLAG??0,??????,???1,????
 215   1          res = ADC_RES*4+ADC_RESL;
 216   1          ADC_CONTR&=~ADC_FLAG;
 217   1          return res;
 218   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    433    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     34       1
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
